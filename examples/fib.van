defun fib(n) as
    local x = 0;
    local y = 1;
    local z = 0;

    for(local i = 1; i <= n; i += 1) do
        z = x + y;
        x = y;
        y = z;
    end

    return x;
end

defun bar(x) as
    for(local i = 0; i < len(x); i+=1) do
        print(x[i] + " |");
    end

    println("");
end

defun evenIndexes(str) as
    for(local i = 0; i < len(str); i += 2) do
        print(str[i]);
    end
end

defun removeChars(str, n) as
    local outStr = "";

    for(local i = n; i < len(str); i+=1) do
        outStr += str[i];
    end

    return outStr;
end

defun isFirst_And_Last_Same(list) as
    return list[0] == list[len(list) - 1];
end

-- defun findDivisible(list, n) as
--     for(local i = 0; i < len(list); i+=1) do
--         if(list[i] % n == 0) then
--             println(list[i]);
--         end
--     end
-- end

-- https://edabit.com/challenges/python3
-- FIZZBUZZ!!
defun stutter(str) as
    local stut = str[0] + str[1];
    local out = "";

    out += stut + "... ";
    out += stut + "... ";
    out += str  + "?";

    return out;
end

defun format_date(date) as
    local month = slice(date,0,1);
    local day   = slice(date,3,4);
    local year  = slice(date,6,9);

    return year + " " +  day + " " + month;
end

defun list_of_multiples(num, length) as
    local outList = [];

    for(local i = 1; i <= length; i += 1) do
        outList += num*i;
    end

    return outList;
end

defun reverse(str) as
    -- Loop through the string backwards
    -- apending to the outstr each index
    local out = "";

    for(local i = len(str); i >= 0; i -= 1) do
        out += str[i];
    end

    return out;
end

defun slice(list, start, stop) as
    local out = [];
    for(local i = start; i < stop; i+=1) do
        out += list[i];
    end

    return out;
end

defun pop(list) as
    return slice(list, 0, len(list) - 1);
end

defun push(list, n) as
    return list + n;
end

-- local count = 0;
-- local myList = [];

-- while(len(myList) < 5) do
--     myList += count;
--     count += 1;
--     println(myList);
-- end

-- while(len(myList) > 0) do
--     println(myList);
--     myList = pop(myList);
-- end

defun join(list) as
    local outStr = "";

    for(local i = 0; i < len(list); i+=1) do
        outStr += list[i];
    end

    return outStr;
end

defun first_n_fib(n) as
    local x = 0;
    local y = 1;
    local z = 0;
    local out = [];

    for(local i = 1; i < n; i += 1) do
        out += x;
        z = x + y;
        x = y;
        y = z;
    end
    
    return out;
end

defun foo(x,y) as
    local arr = [];

    for(local i = x; i <= y; i+=1) do
        arr += i;
    end

    return arr;
end

-- [5, 6, 7, 8, 9, 10]
-- println(foo(5,10));

-- println(foo(5,10)[len(foo(5,10)) - 1]);
-- println(foo(5,10)[5]);
-- println(foo(5,10)[-1]);

-- if(1==1) then
--     println("WOPOOO");
-- end


defun rfib(n) as
    if(n<=1) then
        return n;
    else
        return rfib(n-1) + rfib(n-2);
    end
end

defun split(str, delim) as
    -- Temporary string and output array
    local tempStr = "";
    local outArr = [];

    -- Loop through the string
    for(local i = 0; i < len(str); i+=1) do

        -- If the index == the delimiter, 
        -- then add it to the array
        if(str[i] == delim) then
            outArr += tempStr;
            tempStr = "";
        
        else 
            -- Otherwhise, just add the index
            tempStr += str[i];
        end
    end

    -- Add the last string
    outArr += tempStr;

    -- Return the array
    return outArr;
end

defun find(list, item) as
    for(local i = 0; i < len(list); i += 1) do
        if(list[i] == item) then return i; end
    end

    return -1;
end

defun pow(x,y) as
    local sum = x;

    for(local i = 1; i < y; i+=1) do
        sum *= x;
    end

    return sum;
end

defun countVowels(str) as
    local count = 0;

    for(local i = 0; i < len(str); i+=1) do
        if(str[i] == "a") then
            count += 1;
        elif(str[i] == "e") then
            count += 1;
        elif(str[i] == "i") then
            count +=1;
        elif(str[i] == "o") then
            count += 1;
        elif(str[i] == "u") then
            count += 1;
        end
    end

    return count;
end

defun double_char(str) as
    local i = 0;
    local outStr = "";

    while(i < len(str)) do
        outStr += str[i] + str[i];
        i+=1;
    end

    return outStr;
end


defun fact(n) as
    if(n == 0) then
        return 1;
    else
        return n * fact(n-1);
    end
end

defun sum(list) as
    local out = 0;
    for(local i = 0; i < len(list); i+=1) do
        out += list[i];
    end

    return out;
end

defun contains(list, n) as
    for(local i = 0; i < len(list); i+=1) do
        if(list[i] == n) then
            return 1;
        end
    end

    return 0;
end

defun max(list) as
    local max = 0;

    for(local i = 0; i < len(list); i+=1) do
        if(list[i] > max) then
            max = list[i];
        end
    end

    return max;
end

defun min(list) as
    local min = max(list);

    for(local i = 0; i < len(list); i+=1) do
        if(list[i] < min) then
            min = list[i];
        end
    end

    return min;
end

defun sum_missing_numbers(list) as
    local missing = [];

    for(local i = min(list); i < max(list); i+=1) do
        if(contains(list,i) == 0) then
            missing += i;
        end
    end

    return sum(missing);
end

defun makeMatrix(n,m) as
    local matrix = [];
    local temp = [];

    for(local i = 0; i < n; i+=1) do
        for(local j = 0; j < m; j+=1) do
            temp += 0;
        end
        matrix += temp;
        temp = [];
    end

    return matrix;
end

defun printMatrix(matrix) as
    for(local i = 0; i < len(matrix); i+=1) do
        println(matrix[i]);
    end
end

defun validPal(str) as
    for(local i = 0; i < len(str); i+=1) do        
        if(str[i] != str[-i - 1]) then
            return 0;
        end
    end

    return 1;
end

defun fizzbuzz(n) as
    -- Loop from i => n
    for(local i = 1; i <=n; i+=1) do
        -- First check if i is a multiple of
        -- 3 and 5
        if(i % 15 == 0) then
            println("Fizzbuzz");

        -- Then check if i is a multiple of 5
        elif(i%5==0) then
            println("Buzz");

        -- Or a multiple of 3
        elif(i%3==0) then
            println("Fizz");

        -- Otherwhise just print i
        else println(i); end
    end
end

defun calc(x, op, y) as
    if(op == "+")   then return x+y;
    elif(op == "-") then return x-y;
    elif(op == "*") then return x*y;
    elif(op == "/") then return x/y;

    else
        return "ERROR";
    end
end

println( ([1,2] + [3])[2][0] );